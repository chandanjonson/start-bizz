import type { PagedAsyncIterableIterator } from "@azure/core-paging";
import type { ContainerItem, CpkInfo as BlobCpkInfo, PublicAccessType as ContainerPublicAccessType } from "@azure/storage-blob";
import type { AclFailedEntry, CpkInfo } from "./generated/src/models/index.js";
import type { AccessControlChangeError, FileSystemItem, Metadata, PathAccessControlItem, PathPermissions, PublicAccessType, RemovePathAccessControlItem, RolePermissions, ServiceListContainersSegmentResponse, ServiceListFileSystemsSegmentResponse } from "./models.js";
/**
 * Get a blob endpoint URL from incoming blob or dfs endpoint URLs.
 * Only handle known host name pair patterns, add more patterns into ToBlobEndpointHostMappings in constants.ts.
 *
 * Expected input and outputs:
 * http://account.blob.core.windows.net     - http://account.blob.core.windows.net
 * http://account.dfs.core.windows.net      - http://account.blob.core.windows.net
 * http://127.0.0.1:10000                   - http://127.0.0.1:10000
 * http://account.blob.core.windows.net/abc - http://account.blob.core.windows.net/abc
 * http://account.dfs.core.windows.net/abc  - http://account.blob.core.windows.net/abc
 * http://127.0.0.1:10000/abc               - http://127.0.0.1:10000/abc
 *
 * @param url -
 */
export declare function toBlobEndpointUrl(url: string): string;
/**
 * Get a dfs endpoint URL from incoming blob or dfs endpoint URLs.
 * Only handle known host name pair patterns, add more patterns into ToDfsEndpointHostMappings in constants.ts.
 *
 * Expected input and outputs:
 * http://account.blob.core.windows.net     - http://account.dfs.core.windows.net
 * http://account.dfs.core.windows.net      - http://account.dfs.core.windows.net
 * http://127.0.0.1:10000                   - http://127.0.0.1:10000
 * http://account.blob.core.windows.net/abc - http://account.dfs.core.windows.net/abc
 * http://account.dfs.core.windows.net/abc  - http://account.dfs.core.windows.net/abc
 * http://127.0.0.1:10000/abc               - http://127.0.0.1:10000/abc
 *
 * @param url -
 */
export declare function toDfsEndpointUrl(url: string): string;
export declare function toFileSystemPagedAsyncIterableIterator(iter: PagedAsyncIterableIterator<ContainerItem, ServiceListContainersSegmentResponse>): PagedAsyncIterableIterator<FileSystemItem, ServiceListFileSystemsSegmentResponse>;
export declare function toContainerPublicAccessType(publicAccessType?: PublicAccessType): ContainerPublicAccessType | undefined;
export declare function toPublicAccessType(containerPublicAccessType?: ContainerPublicAccessType): PublicAccessType | undefined;
export declare function toProperties(metadata?: Metadata): string | undefined;
export declare function toRolePermissions(permissionsString: string): RolePermissions;
export declare function toPermissions(permissionsString?: string): PathPermissions | undefined;
export declare function toAccessControlItem(aclItemString: string): PathAccessControlItem;
export declare function toRemoveAccessControlItem(aclItemString: string): RemovePathAccessControlItem;
export declare function toAcl(aclString?: string): PathAccessControlItem[];
export declare function toRemoveAcl(aclString?: string): RemovePathAccessControlItem[];
export declare function toAccessControlItemString(item: PathAccessControlItem): string;
export declare function toAclString(acl: PathAccessControlItem[]): string;
export declare function toRolePermissionsString(p: RolePermissions, stickyBit?: boolean): string;
export declare function toPermissionsString(permissions: PathPermissions): string;
export declare function toAccessControlChangeFailureArray(aclFailedEntries?: AclFailedEntry[]): AccessControlChangeError[];
export declare function toBlobCpkInfo(input?: CpkInfo): BlobCpkInfo | undefined;
//# sourceMappingURL=transforms.d.ts.map